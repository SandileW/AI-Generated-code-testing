{"version":3,"sources":["Documentation.js","Filter.js","Source.js","HumanReadable.js","Issue.js","Issues.js","Traces.js","Runs.js","serviceWorker.js","index.js"],"names":["Documentation","Typography","Text","issues","kind","distance","name","feature","likelyNew","filter","codes","paths","callables","features","traceLengths","trace","fromSource","root","toSink","frameSelectionPrecondition","frameSelectionPostcondition","source","toNextFrame","tito","emptyFilter","mode","gutter","filterEqual","left","right","Object","keys","forEach","key","undefined","JSON","stringify","Label","props","title","label","split","map","value","charAt","toUpperCase","slice","join","type","Codes","codesQuery","gql","codesData","useQuery","data","allCodes","edges","edge","node","code","span","currentFilter","options","style","width","onChange","setCurrentFilter","Paths","pathsQuery","pathsData","allPaths","path","Callables","useState","setMode","inputValue","setInputValue","callablesQuery","callablesData","allCallables","callable","placeholder","event","target","match","suffix","placement","size","length","Features","featuresQuery","featuresData","allFeatures","index","updateFeature","update","newFeatures","onClick","_","filterIndex","disabled","icon","MinusCircleOutlined","PlusOutlined","marginTop","block","IsNewIssue","checked","is_new_issue","TraceLength","traceLengthFromSources","traceLengthToSinks","paddingTop","range","min","max","defaultValue","marks","tipFormatter","FilterForm","loadFilter","appliedFilter","setAppliedFilter","textAlign","refetch","filterToVariables","setVisible","loading","refetching","SaveFilterModal","Form","useForm","form","saveFilterMutation","useMutation","onCompleted","save_filter","parse","json","onSave","saveFilter","error","toString","visible","onOk","values","getFieldsValue","variables","description","hide","okText","onCancel","zIndex","layout","autoComplete","Item","SavedFilters","search","setSearch","saveModalVisible","setSaveModalVisible","deleteModalVisible","setDeleteModalVisible","filtersQuery","filterError","deleteFilterMutation","deleteFilter","deleteError","filters","decoded","toLowerCase","includes","filterMap","justify","onSelect","onSearch","Search","keyboard","overlay","SaveOutlined","DeleteOutlined","MoreOutlined","ghost","window","sessionStorage","getItem","rangeValue","min_trace_length_to_sources","max_trace_length_to_sources","min_trace_length_to_sinks","max_trace_length_to_sinks","Filter","initialFilter","useEffect","setItem","content","margin","FilterOutlined","require","parseRanges","input","lines","numbers","i","parseInt","Error","line","begin","end","from","ch","to","leadingWhitespace","trailingWhitespace","trimEnd","adjustRange","Source","SourceQuery","file","message","height","LoadingOutlined","contents","location","titos","ranges","sort","totalLines","folds","Math","foldSize","startLine","endLine","push","computeLayout","editor","lineNumbers","readOnly","editorDidMount","nativeEditor","markText","className","attributes","fold","foldCode","rangeFinder","widget","textHeight","defaultTextHeight","setSize","offset","heightAtLine","scrollTo","class","EditOutlined","editor_link","Boolean","SelectOutlined","scrollIntoView","HumanReadablePort","port","access","accesses","formal_match","makeDalvikClassHumanReadable","makeDalvikHumanReadable","clazz","method","return_type","parameters","makeDalvikParametersHumanReadable","startsWith","concat","HumanReadable","separator","threshold","readable","wordBreak","Link","ShowMore","showMore","setShowMore","items","maximumElementsToShow","truncatedItems","moreToShow","item","PlusCircleOutlined","DelayedTooltip","mouseEnterDelay","children","Leaves","kinds","color","underline","names","Issue","FireOutlined","marginRight","hideTitle","issue","issue_id","extra","href","run_id","issue_instance_id","ExclamationCircleOutlined","filename","trigger","CodeTwoTone","sources","source_names","sinks","sink_names","IssueSkeleton","active","paragraph","rows","IssuesList","canFetchMore","onFetchMore","IssueQuery","Issues","params","savedFilter","oldData","setOldData","setRefetching","cursor","setCursor","fetchMore","moreData","setMoreData","setCanFetchMore","footer","after","pageInfo","endCursor","then","fetchMoreResult","Option","Select","TraceRoot","VerticalAlignMiddleOutlined","SelectFrame","frames","selectedFrameIndex","setSelectedFrameIndex","padding","callee_location","isPostcondition","isLeaf","is_leaf","select","suffixIcon","frame","leaf","ExpandAltOutlined","trace_length","LogoutOutlined","LoginOutlined","callee","callee_port","next","LoadFrame","NextTraceFramesQuery","frame_id","next_trace_frames","Expansion","InitialTraceFramesQuery","initial_trace_frames","VerticalAlignTopOutlined","leave","plain","VerticalAlignBottomOutlined","withRouter","Run","SyncOutlined","run","date","hostname","Header","Layout","Content","Footer","client","ApolloClient","uri","cache","InMemoryCache","routing","ApolloProvider","FireFilled","exact","component","RunsQuery","runs","Modal","Traces","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.9819788f.chunk.js","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React from 'react';\nimport {Tooltip, Typography} from 'antd';\n\nconst {Text} = Typography;\n\nexport const Documentation = {\n  issues: {\n    kind: 'Explanation for kind',\n    distance: 'Explanation for distance',\n    name: 'Explanation for name',\n    feature: 'Explanation for feature',\n    likelyNew: 'Explanation for new',\n  },\n  filter: {\n    codes: 'Only show issues with codes',\n    paths: 'Only show issues in files at a given path',\n    callables: 'Only show issues that originate in a specific callable',\n    features:\n      'Only show issues with traces whose features match these conditions',\n    traceLengths: 'Only show issues with traces of lenght',\n  },\n  trace: {\n    fromSource: 'Trace from the issue root to the source where data originates',\n    root: 'Where the trace from the source meets the trace to the sink',\n    toSink: 'Trace from the issue root to the data sink',\n    frameSelectionPrecondition:\n      'Explore alternative traces leading to the same sink',\n    frameSelectionPostcondition:\n      'Explore alternative traces from the same source',\n  },\n  source: {\n    toNextFrame: 'Flow to next frame',\n    tito: 'Flow through function',\n  },\n};\n\nexport function DocumentationTooltip(\n  props: $ReadOnly<{path: string}>,\n): React$Node {\n  var title = Documentation;\n  for (const element of props.path.split('.')) {\n    title = title[element];\n  }\n  return (\n    <div style={{display: 'inline', marginLeft: 4}}>\n      <Tooltip title={title}>\n        <Text type=\"secondary\">[?]</Text>\n      </Tooltip>\n    </div>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React, {useState, useEffect} from 'react';\nimport {useQuery, useMutation, gql} from '@apollo/client';\nimport {\n  Alert,\n  AutoComplete,\n  Checkbox,\n  Divider,\n  Dropdown,\n  Popover,\n  Button,\n  Form,\n  Input,\n  Menu,\n  Modal,\n  Row,\n  Col,\n  Select,\n  Slider,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport {\n  FilterOutlined,\n  PlusOutlined,\n  MinusCircleOutlined,\n  MoreOutlined,\n  SaveOutlined,\n  DeleteOutlined,\n} from '@ant-design/icons';\nimport {Documentation} from './Documentation.js';\n\nimport './Filter.css';\n\nconst {Text} = Typography;\n\ntype FeatureCondition = {\n  mode: string,\n  features: $ReadOnlyArray<string>,\n};\n\ntype FilterDescription = {\n  name?: string,\n  description?: string,\n  codes?: $ReadOnlyArray<number>,\n  paths?: $ReadOnlyArray<string>,\n  callables?: $ReadOnlyArray<string>,\n  features?: $ReadOnlyArray<FeatureCondition>,\n  traceLengthFromSources?: $ReadOnlyArray<number>,\n  traceLengthToSinks?: $ReadOnlyArray<number>,\n  is_new_issue?: boolean,\n};\n\nconst emptyFilter = {\n  features: [{mode: 'all of', features: []}],\n};\n\nconst infiniteTraceLength = 31;\nconst gutter = [8, 8];\n\nconst filterEqual = (\n  left: FilterDescription,\n  right: FilterDescription,\n): boolean => {\n  Object.keys(left).forEach(key =>\n    left[key] === undefined ? delete left[key] : {},\n  );\n  Object.keys(right).forEach(key =>\n    right[key] === undefined ? delete right[key] : {},\n  );\n  return JSON.stringify(left) === JSON.stringify(right);\n};\n\nconst Label = (props: $ReadOnly<{label: string}>): React$Node => {\n  const title = props.label\n    .split(/(?=[A-Z])/)\n    .map(value => value.charAt(0).toUpperCase() + value.slice(1))\n    .join(' ');\n  return (\n    <>\n      <Tooltip title={Documentation.filter[props.label]}>\n        <Text type=\"secondary\"> {title}</Text>\n      </Tooltip>\n    </>\n  );\n};\n\nconst Codes = (\n  props: $ReadOnly<{\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  const codesQuery = gql`\n    query Codes {\n      codes {\n        edges {\n          node {\n            code\n          }\n        }\n      }\n    }\n  `;\n  const {data: codesData} = useQuery(codesQuery);\n  const allCodes = (codesData?.codes?.edges || []).map(edge => edge.node.code);\n\n  return (\n    <>\n      <Label label=\"codes\" />\n      <Row gutter={gutter}>\n        <Col span={22}>\n          <Select\n            mode=\"multiple\"\n            value={props.currentFilter.codes}\n            options={allCodes.map(value => ({value}))}\n            style={{width: '100%'}}\n            onChange={codes =>\n              props.setCurrentFilter({...props.currentFilter, codes})\n            }\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst Paths = (\n  props: $ReadOnly<{\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  const pathsQuery = gql`\n    query Paths {\n      paths {\n        edges {\n          node {\n            path\n          }\n        }\n      }\n    }\n  `;\n  const {data: pathsData} = useQuery(pathsQuery);\n  const allPaths = (pathsData?.paths?.edges || []).map(edge => edge.node.path);\n\n  return (\n    <>\n      <Label label=\"paths\" />\n      <Row gutter={gutter}>\n        <Col span={22}>\n          <Select\n            mode=\"multiple\"\n            value={props.currentFilter.paths}\n            options={allPaths.map(value => ({value}))}\n            style={{width: '100%'}}\n            onChange={paths =>\n              props.setCurrentFilter({...props.currentFilter, paths})\n            }\n          />\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst Callables = (\n  props: $ReadOnly<{\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  const [mode, setMode] = useState('is');\n  const [inputValue, setInputValue] = useState(null);\n\n  const callablesQuery = gql`\n    query Callables {\n      callables {\n        edges {\n          node {\n            callable\n          }\n        }\n      }\n    }\n  `;\n  const {data: callablesData} = useQuery(callablesQuery);\n  const allCallables = (callablesData?.callables?.edges || []).map(\n    edge => edge.node.callable,\n  );\n\n  return (\n    <>\n      <Label label=\"callables\" />\n      <Row gutter={gutter}>\n        <Col span={6}>\n          <Select\n            options={[{value: 'is'}, {value: 'matches'}]}\n            value={mode}\n            onChange={setMode}\n            style={{width: '100%'}}\n          />\n        </Col>\n        <Col span={16}>\n          {mode === 'is' ? (\n            <Select\n              mode=\"multiple\"\n              value={props.currentFilter.callables}\n              options={allCallables.map(value => ({value}))}\n              style={{width: '100%'}}\n              onChange={callables =>\n                props.setCurrentFilter({...props.currentFilter, callables})\n              }\n            />\n          ) : (\n            <Input\n              placeholder=\"regular experssion\"\n              style={{width: '100%'}}\n              value={inputValue}\n              onChange={event => {\n                const value = event.target.value;\n                setInputValue(value);\n                const callables = allCallables.filter(callable =>\n                  callable.match(value),\n                );\n                props.setCurrentFilter({...props.currentFilter, callables});\n              }}\n              suffix={\n                <Tooltip\n                  title={(props.currentFilter.callables || []).join('\\n')}\n                  placement=\"bottom\">\n                  <Text type=\"secondary\" size=\"small\">\n                    {(props.currentFilter.callables || []).length}\n                  </Text>\n                </Tooltip>\n              }\n            />\n          )}\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst Features = (\n  props: $ReadOnly<{\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  const featuresQuery = gql`\n    query Features {\n      features {\n        edges {\n          node {\n            feature\n          }\n        }\n      }\n    }\n  `;\n  const {data: featuresData} = useQuery(featuresQuery);\n  const allFeatures = (featuresData?.features?.edges || []).map(\n    edge => edge.node.feature,\n  );\n\n  const features = props.currentFilter.features || [];\n\n  return (\n    <>\n      <Label label=\"features\" />\n      {features.map((feature, index) => {\n        const updateFeature = update => {\n          var newFeatures = [...features];\n          newFeatures[index] = {...feature, ...update};\n          props.setCurrentFilter({\n            ...props.currentFilter,\n            features: newFeatures,\n          });\n        };\n\n        return (\n          <Row gutter={gutter}>\n            <Col span={6}>\n              <Select\n                options={[\n                  {value: 'all of'},\n                  {value: 'any of'},\n                  {value: 'none of'},\n                ]}\n                value={feature.mode}\n                style={{width: '100%'}}\n                onChange={mode => updateFeature({mode})}\n              />\n            </Col>\n            <Col span={16}>\n              <Select\n                mode=\"multiple\"\n                options={allFeatures.map(value => ({value}))}\n                value={feature.features}\n                onChange={features => updateFeature({features})}\n                style={{width: '100%'}}\n              />\n            </Col>\n            <Col span={2}>\n              <Button\n                type=\"text\"\n                onClick={() => {\n                  props.setCurrentFilter({\n                    ...props.currentFilter,\n                    features: features.filter(\n                      (_, filterIndex) => index !== filterIndex,\n                    ),\n                  });\n                }}\n                disabled={features.length < 2}\n                icon={<MinusCircleOutlined />}\n              />\n            </Col>\n          </Row>\n        );\n      })}\n      <Row gutter={gutter}>\n        <Col span={22}>\n          <Button\n            type=\"dashed\"\n            onClick={() => {\n              props.setCurrentFilter({\n                ...props.currentFilter,\n                features: [...features, {mode: 'all of', features: []}],\n              });\n            }}\n            icon={<PlusOutlined />}\n            style={{width: '100%', marginTop: 5}}\n            block>\n            {' '}\n            Add Condition\n          </Button>\n        </Col>\n      </Row>\n    </>\n  );\n};\n\nconst IsNewIssue = (\n  props: $ReadOnly<{\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  return (\n    <>\n      <Label label=\"status\" />\n      <div>\n        <Checkbox\n          checked={props.currentFilter.is_new_issue}\n          onChange={event =>\n            props.setCurrentFilter({\n              ...props.currentFilter,\n              is_new_issue: event.target.checked ? true : undefined,\n            })\n          }\n        />{' '}\n        only show likely new issues\n      </div>\n    </>\n  );\n};\n\ntype TraceLengthKind = 'sources' | 'sinks';\n\nconst TraceLength = (\n  props: $ReadOnly<{\n    kind: TraceLengthKind,\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => void,\n  }>,\n): React$Node => {\n  const value =\n    props.kind === 'sources'\n      ? props.currentFilter.traceLengthFromSources\n      : props.currentFilter.traceLengthToSinks;\n  return (\n    <Row gutter={gutter}>\n      <Col span={5} style={{paddingTop: 10}}>\n        <Text type=\"secondary\">\n          {props.kind === 'sources' ? 'From Sources' : 'To Sinks'}\n        </Text>\n      </Col>\n      <Col span={17}>\n        <Slider\n          range\n          min={0}\n          max={infiniteTraceLength}\n          defaultValue={[0, infiniteTraceLength]}\n          marks={{\n            '0': '0',\n            '31': 'unlimited',\n          }}\n          tipFormatter={value =>\n            value === infiniteTraceLength ? 'unlimited' : value\n          }\n          value={value}\n          onChange={value => {\n            if (props.kind === 'sources') {\n              props.setCurrentFilter({\n                ...props.currentFilter,\n                traceLengthFromSources: value,\n              });\n            } else {\n              props.setCurrentFilter({\n                ...props.currentFilter,\n                traceLengthToSinks: value,\n              });\n            }\n          }}\n        />\n      </Col>\n    </Row>\n  );\n};\n\nconst FilterForm = (props: {\n  refetch: mixed => mixed,\n  refetching: boolean,\n  setVisible: boolean => void,\n  currentFilter: FilterDescription,\n  setCurrentFilter: FilterDescription => void,\n}): React$Node => {\n  const [appliedFilter, setAppliedFilter] = useState<FilterDescription>(\n    loadFilter() || emptyFilter,\n  );\n\n  const apply = () => {\n    setAppliedFilter(props.currentFilter);\n    props.refetch(filterToVariables(props.currentFilter));\n    props.setVisible(false);\n  };\n\n  return (\n    <>\n      <Codes\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Paths\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Callables\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Features\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Divider />\n      <IsNewIssue\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Divider />\n      <Label label=\"traceLengths\" />\n      <TraceLength\n        kind=\"sources\"\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <TraceLength\n        kind=\"sinks\"\n        currentFilter={props.currentFilter}\n        setCurrentFilter={props.setCurrentFilter}\n      />\n      <Divider />\n      <div style={{textAlign: 'right'}}>\n        <Button\n          onClick={() => {\n            props.setCurrentFilter(emptyFilter);\n          }}\n          disabled={filterEqual(props.currentFilter, emptyFilter)}>\n          Clear\n        </Button>{' '}\n        <Button\n          type=\"primary\"\n          onClick={apply}\n          loading={props.refetching}\n          disabled={filterEqual(props.currentFilter, appliedFilter)}>\n          Apply\n        </Button>\n      </div>\n    </>\n  );\n};\n\nconst SaveFilterModal = (\n  props: $ReadOnly<{|\n    currentFilter: FilterDescription,\n    visible: boolean,\n    hide: void => void,\n    onSave: FilterDescription => void,\n  |}>,\n): React$Node => {\n  const [form] = Form.useForm();\n\n  const onCompleted = (data: any): void => {\n    const filter = {\n      ...data.save_filter.node,\n      ...JSON.parse(data.save_filter.node.json),\n    };\n    props.onSave(filter);\n  };\n  const saveFilterMutation = gql`\n    mutation SaveFilter($name: String!, $description: String, $json: String!) {\n      save_filter(\n        input: {name: $name, description: $description, json: $json}\n      ) {\n        node {\n          name\n          description\n          json\n        }\n      }\n    }\n  `;\n  const [saveFilter, {error}] = useMutation(saveFilterMutation, {onCompleted});\n\n  if (error) {\n    return <Alert type=\"error\">{error.toString()}</Alert>;\n  }\n\n  const onOk = (): void => {\n    const values = form.getFieldsValue();\n    saveFilter({\n      variables: {\n        name: values.name,\n        description: values.description,\n        json: JSON.stringify(props.currentFilter),\n      },\n    });\n    props.hide();\n  };\n\n  return (\n    <Modal\n      title=\"Save Filters...\"\n      visible={props.visible}\n      onOk={onOk}\n      okText=\"Save\"\n      onCancel={props.hide}\n      zIndex={2000}>\n      <Form layout=\"vertical\" form={form} autoComplete=\"off\">\n        <Form.Item label=\"Name\" name=\"name\">\n          <Input />\n        </Form.Item>\n        <Form.Item label=\"Description\" name=\"description\">\n          <Input />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nconst SavedFilters = (\n  props: $ReadOnly<{|\n    currentFilter: FilterDescription,\n    setCurrentFilter: FilterDescription => mixed,\n  |}>,\n): React$Node => {\n  const [search, setSearch] = useState(null);\n  const [saveModalVisible, setSaveModalVisible] = useState(false);\n  const [deleteModalVisible, setDeleteModalVisible] = useState(false);\n\n  const filtersQuery = gql`\n    query Filters {\n      filters {\n        edges {\n          node {\n            name\n            description\n            json\n          }\n        }\n      }\n    }\n  `;\n  const {loading, error: filterError, data, refetch} = useQuery(filtersQuery);\n\n  const deleteFilterMutation = gql`\n    mutation DeleteFilter($name: String!) {\n      delete_filter(input: {name: $name}) {\n        clientMutationId\n      }\n    }\n  `;\n  const [deleteFilter, {error: deleteError}] = useMutation(\n    deleteFilterMutation,\n    {\n      onCompleted: refetch,\n    },\n  );\n\n  if (filterError) {\n    return <Alert type=\"error\">{filterError.toString()}</Alert>;\n  }\n  if (deleteError) {\n    return <Alert type=\"error\">{deleteError.toString()}</Alert>;\n  }\n\n  const filters = loading\n    ? []\n    : data.filters.edges.map(edge => {\n        const decoded = JSON.parse(edge.node.json);\n        return {\n          ...edge.node,\n          ...decoded,\n        };\n      });\n\n  const options = filters\n    .filter(filter => {\n      if (search === null) {\n        return true;\n      }\n      return (\n        filter.name.toLowerCase().includes(search.toLowerCase()) ||\n        filter.description?.toLowerCase()?.includes(search.toLowerCase())\n      );\n    })\n    .map(filter => {\n      return {\n        value: filter.name,\n        label: (\n          <div>\n            {filter.name}\n            <br />\n            <Text type=\"secondary\">{filter.description}</Text>\n          </div>\n        ),\n      };\n    });\n\n  var filterMap = {};\n  filters.forEach(filter => (filterMap[filter.name] = filter));\n  const onSelect = (value: string): void => {\n    setSearch(null);\n    props.setCurrentFilter(filterMap[value]);\n  };\n\n  const onSave = (filter: FilterDescription): void => {\n    props.setCurrentFilter(filter);\n    refetch();\n  };\n\n  const onDelete = (): void => {\n    deleteFilter({variables: {name: props.currentFilter.name}});\n    setDeleteModalVisible(false);\n    props.setCurrentFilter(emptyFilter);\n  };\n\n  return (\n    <Row justify=\"space-between\">\n      <Col span={22}>\n        <AutoComplete\n          style={{width: '100%'}}\n          options={options}\n          onSelect={onSelect}\n          onSearch={setSearch}\n          value={search || props.currentFilter?.name || null}>\n          <Input.Search placeholder=\"saved filter\" />\n        </AutoComplete>\n      </Col>\n      <Col>\n        <Modal\n          visible={deleteModalVisible}\n          okText=\"Delete\"\n          onOk={onDelete}\n          onCancel={() => setDeleteModalVisible(false)}\n          zIndex={2000}>\n          Do you really want to delete{' '}\n          <Text keyboard>{props.currentFilter.name}</Text>\n        </Modal>\n        <SaveFilterModal\n          currentFilter={props.currentFilter}\n          visible={saveModalVisible}\n          hide={() => setSaveModalVisible(false)}\n          onSave={onSave}\n        />\n        <Dropdown\n          overlay={\n            <Menu>\n              <Menu.Item\n                disabled={\n                  Object.keys(props.currentFilter).length === 0 ||\n                  props.currentFilter?.name !== undefined\n                }\n                onClick={() => setSaveModalVisible(true)}\n                icon={<SaveOutlined />}>\n                Save...\n              </Menu.Item>\n              <Menu.Item\n                disabled={props.currentFilter?.name === undefined}\n                onClick={() => setDeleteModalVisible(true)}\n                icon={<DeleteOutlined />}>\n                Delete...\n              </Menu.Item>\n            </Menu>\n          }\n          placement=\"bottomRight\">\n          <Button type=\"text\" icon={<MoreOutlined />} ghost />\n        </Dropdown>\n      </Col>\n    </Row>\n  );\n};\n\nexport function loadFilter(): ?FilterDescription {\n  const filter = window.sessionStorage.getItem('filter');\n  if (filter !== undefined) {\n    return JSON.parse(filter);\n  }\n  return null;\n}\n\nexport function filterToVariables(filter: FilterDescription): mixed {\n  const rangeValue = value => {\n    if (value === 0) {\n      return undefined;\n    }\n    if (value === infiniteTraceLength) {\n      return undefined;\n    }\n    return value;\n  };\n\n  return {\n    ...filter,\n    min_trace_length_to_sources: rangeValue(\n      (filter.traceLengthFromSources || [])[0],\n    ),\n    max_trace_length_to_sources: rangeValue(\n      (filter.traceLengthFromSources || [])[1],\n    ),\n    min_trace_length_to_sinks: rangeValue((filter.traceLengthToSinks || [])[0]),\n    max_trace_length_to_sinks: rangeValue((filter.traceLengthToSinks || [])[1]),\n  };\n}\n\nconst Filter = (props: {refetch: any, refetching: boolean}) => {\n  const initialFilter = loadFilter() || emptyFilter;\n\n  const [visible, setVisible] = useState(false);\n  const [currentFilter, setCurrentFilter] = useState<FilterDescription>(\n    initialFilter,\n  );\n\n  useEffect(() => {\n    window.sessionStorage.setItem('filter', JSON.stringify(currentFilter));\n  }, [currentFilter]);\n\n  const content = (\n    <div style={{width: '500px'}}>\n      <SavedFilters\n        currentFilter={currentFilter}\n        setCurrentFilter={setCurrentFilter}\n      />\n      <Divider />\n      <FilterForm\n        refetch={props.refetch}\n        refetching={props.refetching}\n        setVisible={setVisible}\n        currentFilter={currentFilter}\n        setCurrentFilter={setCurrentFilter}\n      />\n    </div>\n  );\n\n  return (\n    <>\n      <div style={{textAlign: 'right', margin: '10px 0 -40px 0'}}>\n        <Popover\n          visible={visible || props.refetching}\n          content={content}\n          placement=\"bottomRight\"\n          onClick={() => setVisible(!visible)}>\n          <Button\n            icon={<FilterOutlined />}\n            type={!filterEqual(initialFilter, emptyFilter) ? 'primary' : null}>\n            Filter\n          </Button>\n        </Popover>\n      </div>\n    </>\n  );\n};\n\nexport default Filter;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React from 'react';\nimport {Alert, Button, Tooltip, Typography} from 'antd';\nimport {EditOutlined, SelectOutlined, LoadingOutlined} from '@ant-design/icons';\nimport {useQuery, gql} from '@apollo/client';\nimport {Controlled as CodeMirror} from 'react-codemirror2';\nimport {Documentation} from './Documentation';\n\nimport './Source.css';\nrequire('codemirror/lib/codemirror.css');\nrequire('codemirror/addon/fold/foldcode.js');\nrequire('codemirror/mode/python/python.js');\n\nconst {Text} = Typography;\n\ntype Location = $ReadOnly<{\n  line: number,\n  ch: number,\n}>;\n\ntype Range = $ReadOnly<{\n  from: Location,\n  to: Location,\n}>;\n\nfunction adjustRange(range: Range, lines: $ReadOnlyArray<string>): Range {\n  // TODO(T78595608): workaround for inaccurate Pysa locations with leading and\n  // trailing whitespaces.\n\n  // Assuming all ranges are single line.\n  const source = lines[range.from.line].slice(range.from.ch, range.to.ch);\n  const leadingWhitespace = source.search(/\\S/);\n  const trailingWhitespace = source.length - source.trimEnd().length;\n  return {\n    from: {\n      line: range.from.line,\n      ch: range.from.ch + leadingWhitespace,\n    },\n    to: {\n      line: range.to.line,\n      ch: range.to.ch - trailingWhitespace,\n    },\n  };\n}\n\nfunction parseRanges(\n  input: ?string,\n  lines: $ReadOnlyArray<string>,\n): Array<Range> {\n  if (input === undefined || input === null || input === '') {\n    return [];\n  }\n\n  return input.split(';').map(input => {\n    const numbers = input.split('|').map(i => parseInt(i));\n    if (numbers.length !== 3) {\n      throw new Error(`Invalid Location: ${input}`);\n    }\n    const line = numbers[0] - 1;\n    var begin = numbers[1];\n    var end = numbers[2];\n    if (end < begin) {\n      // TODO(T78595608): remove temporary workaround for Pysa inverting locations.\n      [begin, end] = [end, begin];\n    }\n\n    return adjustRange(\n      {\n        from: {line, ch: begin - 1},\n        to: {line, ch: end},\n      },\n      lines,\n    );\n  });\n}\n\ntype Layout = $ReadOnly<{\n  totalLines: number,\n  folds: Array<{line: number, range: Range}>,\n}>;\n\nconst linesPerFold = 4;\n\nfunction computeLayout(\n  ranges: Array<Range>,\n  lines: $ReadOnlyArray<string>,\n): Layout {\n  if (ranges.length === 0) {\n    return {totalLines: 10, folds: []};\n  }\n\n  var totalLines = Math.max(\n    ranges[ranges.length - 1].from.line - ranges[0].from.line + 3,\n    10,\n  );\n\n  var folds = [];\n\n  const foldingThreshold = 10;\n  const padding = 1;\n\n  for (var index = 0; index < ranges.length - 1; index++) {\n    const distance = ranges[index + 1].from.line - ranges[index].from.line;\n    const foldSize = distance - 2 * padding;\n    if (distance > foldingThreshold) {\n      const startLine = ranges[index].from.line + padding;\n      const endLine = startLine + foldSize;\n      folds.push({\n        line: startLine,\n        range: {\n          from: {\n            line: startLine,\n            ch: lines[startLine].length,\n          },\n          to: {\n            line: endLine,\n            ch: lines[endLine].length,\n          },\n        },\n      });\n      totalLines = totalLines - foldSize + linesPerFold;\n    }\n  }\n\n  return {totalLines, folds};\n}\n\nfunction Source(\n  props: $ReadOnly<{|path: string, location: string, titos?: string|}>,\n): React$Node {\n  var line = null;\n\n  const SourceQuery = gql`\n    query Issue($path: String) {\n      file(path: $path) {\n        edges {\n          node {\n            contents\n            editor_link\n          }\n        }\n      }\n    }\n  `;\n  const {loading, error, data} = useQuery(SourceQuery, {\n    variables: {path: props.path},\n  });\n  const file = data?.file?.edges[0]?.node;\n\n  var content = <div />;\n  if (error) {\n    content = (\n      <Tooltip title={error.toString()}>\n        <Alert\n          message={`No file found for ${props.path}`}\n          type=\"info\"\n        />\n      </Tooltip>\n    );\n  } else if (loading) {\n    content = (\n      <div style={{height: '12em', textAlign: 'center', paddingTop: '5em'}}>\n        <Text type=\"secondary\">\n          <LoadingOutlined />\n          <br />\n          Loading {props.path}...\n        </Text>\n      </div>\n    );\n  } else {\n    const source = file.contents;\n    const lines = source.split('\\n');\n    const range = parseRanges(props.location, lines)[0];\n    line = range.from.line;\n    const titos = parseRanges(props.titos, lines);\n\n    const ranges = [...titos, range].sort(\n      (left, right) => left.from.line - right.from.line,\n    );\n\n    const layout = computeLayout(ranges, lines);\n\n    // React codemirror is horribly broken so store a reference to underlying\n    // JS implementation.\n    var editor = null;\n\n    content = (\n      <CodeMirror\n        value={source}\n        options={{lineNumbers: true, readOnly: 'nocursor'}}\n        editorDidMount={nativeEditor => {\n          editor = nativeEditor;\n\n          editor.markText(range.from, range.to, {\n            className: 'Source-selection',\n            attributes: {\n              title: Documentation.source.toNextFrame,\n            },\n          });\n\n          titos.forEach(range => {\n            nativeEditor.markText(range.from, range.to, {\n              className: 'Source-tito',\n              attributes: {\n                title: Documentation.source.tito,\n              },\n            });\n          });\n\n          layout.folds.forEach(fold => {\n            nativeEditor.foldCode(fold.line, {\n              rangeFinder: _ => fold.range,\n              widget: `Hiding ${fold.range.to.line -\n                fold.line} lines. Click to expand...`,\n            });\n          });\n\n          const textHeight = editor.defaultTextHeight();\n          editor.setSize(null, layout.totalLines * textHeight);\n          const offset = editor.heightAtLine(\n            ranges[ranges.length - 1].from.line - layout.totalLines + 2,\n            'local',\n          );\n          editor.scrollTo(\n            0,\n            offset - (linesPerFold + 2) * layout.folds.length * textHeight,\n          );\n        }}\n      />\n    );\n  }\n\n  return (\n    <>\n      <div class=\"source-menu\">\n        <Tooltip title=\"Open in Editor\" placement=\"bottom\">\n          <Button\n            size=\"small\"\n            icon={<EditOutlined />}\n            type=\"text\"\n            onClick={() => {\n              window.location = file.editor_link;\n            }}\n            disabled={loading || error || !Boolean(file.editor_link)}\n          />\n        </Tooltip>\n        <Tooltip title=\"Reset Scroll\" placement=\"bottom\">\n          <Button\n            size=\"small\"\n            icon={<SelectOutlined />}\n            type=\"text\"\n            onClick={() =>\n              editor && editor.scrollIntoView({line: line || 0, ch: 0})\n            }\n            disabled={loading || error}\n          />\n        </Tooltip>\n      </div>\n      <div class=\"source\">{content}</div>\n    </>\n  );\n}\n\nexport default Source;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React from 'react';\nimport {Tooltip, Typography} from 'antd';\nconst {Text} = Typography;\n\nexport function HumanReadablePort(props: $ReadOnly<{port: string}>) {\n  // TODO(T71492980): hard-coding heuristics for Pysa right now.\n  var port = props.port;\n\n  var access = '';\n  var accesses = port.match(/(\\[.*\\])+/);\n  if (accesses) {\n    port = port.slice(0, port.length - accesses[1].length);\n    accesses = accesses[1]\n      .split(']')\n      .filter(access => access !== '')\n      .map(access => access.slice(1))\n      .map(access => <Text code>{access}</Text>);\n    access = <> accessing {accesses}</>;\n  }\n\n  if (port === 'result') {\n    port = 'returns';\n  }\n  const formal_match = port.match(/formal\\((.*)\\)/);\n  if (formal_match) {\n    port = (\n      <>\n        into parameter <Text code>{formal_match[1]}</Text>\n      </>\n    );\n  }\n\n  return (\n    <Text type=\"secondary\">\n      {port}\n      {access}\n    </Text>\n  );\n}\n\nfunction makeDalvikParametersHumanReadable(input: string): Array<string> {\n  if (input.length == 0) {\n    return [];\n  }\n\n  if (!input.startsWith('L')) {\n    return [makeDalvikClassHumanReadable(input[0])].concat(\n      makeDalvikParametersHumanReadable(input.slice(1)),\n    );\n  } else {\n    const split = input.split(';');\n    return [makeDalvikClassHumanReadable(split[0] + ';')].concat(\n      makeDalvikParametersHumanReadable(split.slice(1).join(';')),\n    );\n  }\n}\n\nfunction makeDalvikClassHumanReadable(input: string): string {\n  switch (input) {\n    case 'I': return 'int';\n    case 'V': return 'void';\n    case 'Z': return 'boolean';\n  }\n\n  const split = input.split('/');\n  return split[split.length - 1].slice(0, -1);\n}\n\nfunction makeDalvikHumanReadable(input: string): string {\n  const match = input.match(/(.*);\\.(.*):\\((.*)\\)(.*)/);\n  if (match == null) {\n    return input;\n  }\n\n  const clazz = makeDalvikClassHumanReadable(match[1]);\n  const method = match[2];\n  const return_type = makeDalvikClassHumanReadable(match[4]);\n  const parameters = makeDalvikParametersHumanReadable(match[3]).join(', ');\n\n  return `${return_type} ${clazz}.${method}(${parameters})`;\n}\n\nexport function HumanReadable(\n  props: $ReadOnly<{\n    input: string,\n    separator?: string,\n    threshold?: number,\n    code?: boolean,\n  }>,\n): React$Node {\n  const separator = props.separator || '.';\n  const threshold = props.threshold || 50;\n\n  var readable = props.input;\n\n  if (readable.includes(';')) {\n    // Assume this is a Dalvik identifier\n    readable = makeDalvikHumanReadable(readable);\n  }\n\n  if (readable.length > threshold) {\n    // Attempt to construct `module...Class.method`.\n    const split = readable.split(separator);\n    if (split.length > 3) {\n      readable = `${split[0]}${separator}[...]${separator}${\n        split[split.length - 2]\n      }.${split[split.length - 1]}`;\n    }\n  }\n  return (\n    <Tooltip title={props.input}>\n      <Text code={props.code || false} style={{wordBreak: 'break-all'}}>\n        {readable}\n      </Text>\n    </Tooltip>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React, {useState} from 'react';\nimport {\n  Card,\n  Col,\n  Popover,\n  Row,\n  Skeleton,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport {\n  CodeTwoTone,\n  ExclamationCircleOutlined,\n  FireOutlined,\n  MinusCircleOutlined,\n  PlusCircleOutlined,\n} from '@ant-design/icons';\nimport Source from './Source.js';\nimport {Documentation} from './Documentation.js';\nimport {HumanReadable} from './HumanReadable';\n\nconst {Text, Link} = Typography;\n\nfunction ShowMore(\n  props: $ReadOnly<{|\n    items: $ReadOnlyArray<string>,\n    maximumElementsToShow: number,\n  |}>,\n): React$Node {\n  const [showMore, setShowMore] = useState(false);\n  const items = props.items;\n\n  if (items.length <= props.maximumElementsToShow) {\n    return (\n      <>\n        {items.map(feature => (\n          <Tag>{feature}</Tag>\n        ))}\n      </>\n    );\n  } else {\n    const truncatedItems = items.slice(\n      0,\n      showMore ? items.length : props.maximumElementsToShow,\n    );\n    const moreToShow = items.length - truncatedItems.length;\n    return (\n      <>\n        {truncatedItems.map(item => (\n          <Tag>{item}</Tag>\n        ))}\n        <Tag\n          onClick={() => setShowMore(!showMore)}\n          icon={!showMore ? <PlusCircleOutlined /> : <MinusCircleOutlined />}>\n          {!showMore ? `Show ${moreToShow} more...` : 'Show fewer...'}\n        </Tag>\n      </>\n    );\n  }\n}\n\nfunction DelayedTooltip(\n  props: $ReadOnly<{|\n    content: string,\n    children: React$Node,\n    placement?: string,\n  |}>,\n): React$Node {\n  return (\n    <Tooltip\n      mouseEnterDelay={1.0}\n      title={props.content}\n      placement={props.placement}>\n      {props.children}\n    </Tooltip>\n  );\n}\n\ntype LeafKind = 'sources' | 'sinks';\n\nfunction Leaves(\n  props: $ReadOnly<{|\n    kind: LeafKind,\n    kinds: $ReadOnlyArray<string>,\n    names: $ReadOnlyArray<string>,\n    distance: number,\n  |}>,\n): React$Node {\n  return (\n    <>\n      <DelayedTooltip content={Documentation.issues.kind}>\n        {props.kinds.map(kind => (\n          <Tag color={props.kind === 'sources' ? 'green' : 'red'}>{kind}</Tag>\n        ))}\n      </DelayedTooltip>{' '}\n      at{' '}\n      <DelayedTooltip content={Documentation.issues.distance}>\n        <Text underline>minimum distance {props.distance}.</Text>\n      </DelayedTooltip>\n      <br />\n      <DelayedTooltip placement=\"right\" content={Documentation.issues.name}>\n        <div style={{marginTop: '.5em'}}>\n          <ShowMore items={props.names} maximumElementsToShow={5} />\n        </div>\n      </DelayedTooltip>\n    </>\n  );\n}\n\nexport type IssueDescription = {\n  issue_id: number,\n  issue_instance_id: number,\n  code: number,\n  message: string,\n  callable: string,\n  filename: string,\n  location: string,\n  sources: $ReadOnlyArray<string>,\n  source_names: $ReadOnlyArray<string>,\n  sinks: $ReadOnlyArray<string>,\n  sink_names: $ReadOnlyArray<string>,\n  features: $ReadOnlyArray<string>,\n  min_trace_length_to_sources: number,\n  min_trace_length_to_sinks: number,\n  is_new_issue: boolean,\n};\n\nexport function Issue(\n  props: $ReadOnly<{\n    run_id: number,\n    issue: IssueDescription,\n    hideTitle?: boolean,\n  }>,\n): React$Node {\n  const gutter = [8, 8];\n\n  const Label = (props: $ReadOnly<{children: React$Node}>): React$Node => {\n    return (\n      <Col span={4} style={{textAlign: 'right'}}>\n        <Text type=\"secondary\">{props.children}</Text>\n      </Col>\n    );\n  };\n  const Item = (props: $ReadOnly<{children: React$Node}>): React$Node => {\n    return (\n      <Col span={20}>\n        <Text type=\"secondary\">{props.children}</Text>\n      </Col>\n    );\n  };\n\n  return (\n    <Card\n      size=\"small\"\n      title={\n        <>\n          <FireOutlined style={{marginRight: '.5em'}} />\n          {props.hideTitle ? 'Issue' : <>Issue {props.issue.issue_id}</>}\n        </>\n      }\n      extra={\n        props.hideTitle ? null : (\n          <Link\n            href={`/run/${props.run_id}/issue/${props.issue.issue_instance_id}`}>\n            Traces\n          </Link>\n        )\n      }>\n      <Row gutter={gutter}>\n        <Label>Code</Label>\n        <Item>\n          <Text code>{props.issue.code}</Text>\n        </Item>\n      </Row>\n      <Row gutter={gutter}>\n        <Label>Description</Label>\n        <Item>{props.issue.message}</Item>\n      </Row>\n      {props.issue.is_new_issue ? (\n        <Row gutter={gutter}>\n          <Label>Status</Label>\n          <Item>\n            <Tooltip title={Documentation.issues.likelyNew}>\n              <Tag icon={<ExclamationCircleOutlined />} color=\"warning\">\n                likely new\n              </Tag>\n            </Tooltip>\n          </Item>\n        </Row>\n      ) : null}\n      <Row gutter={gutter}>\n        <Label>Callable</Label>\n        <Item>\n          <HumanReadable input={props.issue.callable} code />\n        </Item>\n      </Row>\n      <Row gutter={gutter}>\n        <Label>Location</Label>\n        <Item>\n          <Tooltip title=\"Click to preview\">\n            <Popover\n              title=\"Source preview\"\n              content={\n                <div style={{width: '600px'}}>\n                  <Source\n                    path={props.issue.filename}\n                    location={props.issue.location}\n                  />\n                </div>\n              }\n              placement=\"bottomRight\"\n              trigger=\"click\">\n              <CodeTwoTone />\n            </Popover>\n          </Tooltip>{' '}\n          <HumanReadable input={props.issue.filename} code separator=\"/\" />\n        </Item>\n      </Row>\n      <Row gutter={gutter}>\n        <Label>Sources</Label>\n        <Item>\n          <Leaves\n            kind=\"sources\"\n            kinds={props.issue.sources}\n            names={props.issue.source_names}\n            distance={props.issue.min_trace_length_to_sources}\n          />\n        </Item>\n      </Row>\n      <Row gutter={gutter}>\n        <Label>Sinks</Label>\n        <Item>\n          <Leaves\n            kind=\"sinks\"\n            kinds={props.issue.sinks}\n            names={props.issue.sink_names}\n            distance={props.issue.min_trace_length_to_sinks}\n          />\n        </Item>\n      </Row>\n      <Row gutter={gutter}>\n        <Label>Features</Label>\n        <Item>\n          <DelayedTooltip\n            content={Documentation.issues.feature}\n            placement=\"left\">\n            <div>\n              <ShowMore\n                items={props.issue.features}\n                maximumElementsToShow={5}\n              />\n            </div>\n          </DelayedTooltip>\n        </Item>\n      </Row>\n    </Card>\n  );\n}\n\nexport function IssueSkeleton(): React$Node {\n  return (\n    <Card>\n      <Skeleton active paragraph={{rows: 10}} />\n    </Card>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery, gql } from '@apollo/client';\nimport { Button, Modal, Breadcrumb } from 'antd';\nimport Filter, { loadFilter, filterToVariables } from './Filter';\nimport { Issue, IssueSkeleton } from './Issue.js';\n\nimport { MoreOutlined } from '@ant-design/icons';\n\nfunction IssuesList(props: $ReadOnly<{|\n  issues: any,\n  run_id: number,\n  onFetchMore: any,\n  canFetchMore: boolean\n|}>): React$Node {\n  return (\n    <>\n      {props.issues.map(({ node }) => (\n        <>\n          <Issue run_id={props.run_id} issue={node} />\n          <br />\n        </>\n      ))}\n      <div style={{ textAlign: 'center' }}>\n        <Button\n          type=\"dashed\"\n          disabled={!props.canFetchMore}\n          onClick={props.onFetchMore}>\n          Load More...\n        </Button>\n      </div>\n    </>\n  );\n}\n\nconst PAGE_SIZE = 20;\n\nconst IssueQuery = gql`\n  query Issue(\n    $after: String\n    $run_id: Int!\n    $codes: [Int]\n    $paths: [String]\n    $callables: [String]\n    $features: [FeatureCondition]\n    $min_trace_length_to_sinks: Int\n    $max_trace_length_to_sinks: Int\n    $min_trace_length_to_sources: Int\n    $max_trace_length_to_sources: Int\n    $is_new_issue: Boolean\n  ) {\n    issues(\n      first: ${PAGE_SIZE}\n      after: $after\n      run_id: $run_id\n      codes: $codes\n      paths: $paths\n      callables: $callables\n      features: $features\n      min_trace_length_to_sinks: $min_trace_length_to_sinks\n      max_trace_length_to_sinks: $max_trace_length_to_sinks\n      min_trace_length_to_sources: $min_trace_length_to_sources\n      max_trace_length_to_sources: $max_trace_length_to_sources\n      is_new_issue: $is_new_issue\n    ) {\n      edges {\n        node {\n          issue_id\n          issue_instance_id\n          code\n          message\n          callable\n          filename\n          location\n          sources\n          source_names\n          sinks\n          sink_names\n          features\n          is_new_issue\n          min_trace_length_to_sources\n          min_trace_length_to_sinks\n        }\n      }\n      pageInfo {\n        endCursor\n      }\n    }\n  }\n`;\n\nconst Issues = (props: $ReadOnly<{ match: any }>): React$Node => {\n  const run_id = props.match.params.run_id;\n\n  const savedFilter = loadFilter();\n  const variables = savedFilter ? filterToVariables(savedFilter) : null;\n\n  const [oldData, setOldData] = useState(null);\n  const [refetching, setRefetching] = useState(false);\n\n  const [cursor, setCursor] = useState(null);\n  const { loading, error, data, fetchMore, refetch } = useQuery(IssueQuery, {\n    variables: { ...variables, run_id, offset: 0 },\n  });\n  const [moreData, setMoreData] = useState([]);\n  const [canFetchMore, setCanFetchMore] = useState(true);\n\n  // Ridiculous workaround for https://github.com/apollographql/react-apollo/issues/3709.\n  const clearAndRefetch = values => {\n    setOldData(data);\n    setRefetching(true);\n    refetch(values);\n  };\n  useEffect(() => {\n    if (data !== oldData) {\n      setRefetching(false);\n    }\n  }, [data, oldData, setOldData]);\n\n  var content = null;\n  if (error) {\n    content = (\n      <Modal title=\"Error\" visible={true} footer={null}>\n        <p>{error.toString()}</p>\n      </Modal>\n    );\n  } else if (loading) {\n    content = <IssueSkeleton />;\n  } else {\n    const issues = data.issues.edges || [];\n    content = (\n      <IssuesList\n        run_id={run_id}\n        issues={[...issues, ...moreData]}\n        onFetchMore={() => {\n          fetchMore({\n            variables: {\n              after: cursor || data.issues.pageInfo.endCursor,\n            }\n          }).then(fetchMoreResult => {\n            const issues = fetchMoreResult.data.issues;\n            setCursor(issues.pageInfo.endCursor);\n            setMoreData([...moreData, ...issues.edges])\n            setCanFetchMore(issues.edges.length == PAGE_SIZE)\n          });\n        }}\n        canFetchMore={issues.length >= PAGE_SIZE && canFetchMore}\n      />\n    );\n  }\n\n  return (\n    <>\n      <Filter refetch={clearAndRefetch} refetching={refetching} />\n      <Breadcrumb style={{ margin: '16px 0' }}>\n        <Breadcrumb.Item href=\"/runs\">Runs</Breadcrumb.Item>\n        <Breadcrumb.Item>Run {run_id}</Breadcrumb.Item>\n      </Breadcrumb>\n      {content}\n    </>\n  );\n};\n\nexport default Issues;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport type {IssueDescription} from './Issue.js';\nimport React, {useState} from 'react';\nimport {withRouter} from 'react-router';\nimport {\n  Alert,\n  Breadcrumb,\n  Card,\n  Divider,\n  Modal,\n  Skeleton,\n  Select,\n  Tag,\n  Tooltip,\n  Typography,\n} from 'antd';\nimport {\n  ExpandAltOutlined,\n  LoginOutlined,\n  LogoutOutlined,\n  VerticalAlignMiddleOutlined,\n  VerticalAlignBottomOutlined,\n  VerticalAlignTopOutlined,\n} from '@ant-design/icons';\nimport {useQuery, gql} from '@apollo/client';\nimport Source from './Source.js';\nimport {Documentation} from './Documentation.js';\nimport {Issue, IssueSkeleton} from './Issue.js';\nimport {HumanReadable, HumanReadablePort} from './HumanReadable';\n\nrequire('./Traces.css');\n\nconst {Text} = Typography;\nconst {Option} = Select;\n\nfunction TraceRoot(\n  props: $ReadOnly<{|data: any, loading: boolean|}>,\n): React$Node {\n  if (props.loading) {\n    return (\n      <>\n        <Card>\n          <Skeleton active />\n        </Card>\n        <br />\n      </>\n    );\n  }\n\n  const issue = props.data.issues.edges[0].node;\n\n  return (\n    <>\n      <Card>\n        <Text>\n          <VerticalAlignMiddleOutlined style={{marginRight: '.5em'}} />\n          Source and sink traces meet at{' '}\n          <HumanReadable input={issue.callable} code />.\n        </Text>\n        <Source path={issue.filename} location={issue.location} />\n      </Card>\n      <br />\n    </>\n  );\n}\n\ntype Kind = 'precondition' | 'postcondition';\n\ntype Frame = $ReadOnly<{\n  frame_id: number,\n  callee: string,\n  callee_port: string,\n  callee_id: number,\n  filename: string,\n  callee_location: string,\n  trace_length: number,\n  is_leaf: boolean,\n  titos: string,\n}>;\n\nfunction SelectFrame(\n  props: $ReadOnly<{|\n    issue_instance_id: number,\n    frames: $ReadOnlyArray<Frame>,\n    kind: Kind,\n  |}>,\n): React$Node {\n  const [selectedFrameIndex, setSelectedFrameIndex] = useState(\n    props.frames.length === 0 ? null : 0,\n  );\n\n  if (props.frames.length === 0) {\n    return (\n      <div style={{width: '100%', textAlign: 'center', padding: '2em'}}>\n        <Text type=\"warning\">Missing Trace Frame</Text>\n      </div>\n    );\n  }\n\n  const source = (\n    <Source\n      path={props.frames[0].filename}\n      location={props.frames[0].callee_location}\n      titos={props.frames[0].titos}\n    />\n  );\n\n  const isPostcondition = props.kind === 'postcondition';\n  const isLeaf =\n    selectedFrameIndex !== null && props.frames[selectedFrameIndex].is_leaf;\n\n  var select = null;\n  if (!isLeaf) {\n    const icon = (frame): React$Node => {\n      const leaf = isPostcondition ? 'source' : 'sink';\n\n      var icon = <ExpandAltOutlined />;\n      if (frame.trace_length === 1) {\n        icon = isPostcondition ? <LogoutOutlined /> : <LoginOutlined />;\n      }\n\n      return (\n        <Tooltip title={`Distance to ${leaf}`}>\n          <Text type=\"secondary\">\n            {icon} {frame.trace_length}{' '}\n          </Text>\n        </Tooltip>\n      );\n    };\n\n    select = (\n      <div class=\"Trace-select\">\n        <Select\n          defaultValue={selectedFrameIndex}\n          style={{width: '100%'}}\n          onChange={setSelectedFrameIndex}\n          suffixIcon={null}\n          disabled={props.frames.length < 2}>\n          {props.frames.map((frame, index) => {\n            return (\n              <Option value={index}>\n                {icon(frame)}\n                <HumanReadable input={frame.callee} code threshold={30} />{' '}\n                <HumanReadablePort port={frame.callee_port || ''} />\n              </Option>\n            );\n          })}\n        </Select>\n      </div>\n    );\n  }\n\n  var next = null;\n  if (selectedFrameIndex !== null && !isLeaf) {\n    next = (\n      <LoadFrame\n        issue_instance_id={props.issue_instance_id}\n        frame={props.frames[selectedFrameIndex]}\n        kind={props.kind}\n      />\n    );\n  }\n\n  return (\n    <>\n      {isPostcondition ? (\n        <>\n          {next}\n          {select}\n        </>\n      ) : null}\n      {source}\n      {!isPostcondition ? (\n        <>\n          {select}\n          {next}\n        </>\n      ) : null}\n    </>\n  );\n}\n\nfunction LoadFrame(\n  props: $ReadOnly<{|\n    issue_instance_id: number,\n    frame: Frame,\n    kind: Kind,\n  |}>,\n): React$Node {\n  const NextTraceFramesQuery = gql`\n    query NextTraceFrames(\n      $issue_instance_id: Int!\n      $frame_id: Int!\n      $kind: String!\n    ) {\n      next_trace_frames(\n        issue_instance_id: $issue_instance_id\n        frame_id: $frame_id\n        kind: $kind\n      ) {\n        edges {\n          node {\n            frame_id\n            callee\n            callee_port\n            callee_id\n            filename\n            callee_location\n            trace_length\n            is_leaf\n            titos\n          }\n        }\n      }\n    }\n  `;\n  const {loading, error, data} = useQuery(NextTraceFramesQuery, {\n    variables: {\n      issue_instance_id: props.issue_instance_id,\n      frame_id: props.frame.frame_id,\n      kind: props.kind,\n    },\n  });\n  const frames = (data?.next_trace_frames?.edges || []).map(edge => edge.node);\n\n  if (loading) {\n    return <Skeleton active />;\n  }\n\n  if (error) {\n    return <Alert type=\"error\">{error.toString()}</Alert>;\n  }\n\n  return (\n    <SelectFrame\n      issue_instance_id={props.issue_instance_id}\n      frames={frames}\n      kind={props.kind}\n    />\n  );\n}\n\nfunction Expansion(\n  props: $ReadOnly<{|\n    issue_instance_id: number,\n    issue: ?IssueDescription,\n    kind: Kind,\n  |}>,\n): React$Node {\n  const InitialTraceFramesQuery = gql`\n    query InitialTraceFrame($issue_instance_id: Int!, $kind: String!) {\n      initial_trace_frames(issue_instance_id: $issue_instance_id, kind: $kind) {\n        edges {\n          node {\n            frame_id\n            callee\n            callee_id\n            filename\n            callee_location\n            trace_length\n            is_leaf\n          }\n        }\n      }\n    }\n  `;\n  const {loading, error, data} = useQuery(InitialTraceFramesQuery, {\n    variables: {issue_instance_id: props.issue_instance_id, kind: props.kind},\n  });\n  const frames = (data?.initial_trace_frames?.edges || []).map(\n    edge => edge.node,\n  );\n\n  const isPostcondition = props.kind === 'postcondition';\n\n  var content = null;\n  if (loading) {\n    content = <Skeleton active />;\n  } else if (error) {\n    content = <Alert type=\"error\">{error.toString()}</Alert>;\n  } else {\n    content = (\n      <SelectFrame\n        issue_instance_id={props.issue_instance_id}\n        frames={frames}\n        kind={props.kind}\n      />\n    );\n  }\n\n  var description = null;\n  const issue = props.issue;\n  if (issue != null) {\n    if (isPostcondition) {\n      description = (\n        <>\n          <Text>\n            <VerticalAlignTopOutlined style={{marginRight: '.5em'}} />\n            Data of {issue.sources.length === 1 ? 'type ' : 'types '}\n            {issue.sources.map(leave => (\n              <Tag color=\"green\">{leave}</Tag>\n            ))}\n            flowing <i>up to</i> <HumanReadable input={issue.callable} code />.\n          </Text>\n          <Divider plain>Traces</Divider>\n        </>\n      );\n    } else {\n      description = (\n        <>\n          <Text>\n            <VerticalAlignBottomOutlined style={{marginRight: '.5em'}} />\n            Data of {issue.sources.length === 1 ? 'type ' : 'types '}\n            {issue.sources.map(leave => (\n              <Tag color=\"green\">{leave}</Tag>\n            ))}\n            flowing <i>from</i> <HumanReadable input={issue.callable} code />{' '}\n            into sinks of {issue.sinks.length === 1 ? 'type ' : 'types '}\n            {issue.sinks.map(leave => (\n              <Tag color=\"red\">{leave}</Tag>\n            ))}\n            .\n          </Text>\n          <Divider plain>Traces</Divider>\n        </>\n      );\n    }\n  }\n  return (\n    <>\n      <Card>\n        {description}\n        {content}\n      </Card>\n      <br />\n    </>\n  );\n}\n\nfunction Trace(props: $ReadOnly<{|match: any|}>): React$Node {\n  const run_id = props.match.params.run_id;\n  const issue_instance_id = props.match.params.issue_instance_id;\n\n  const IssueQuery = gql`\n    query Issue($run_id: Int!, $issue_instance_id: Int!) {\n      issues(run_id: $run_id, issue_instance_id: $issue_instance_id) {\n        edges {\n          node {\n            issue_id\n            issue_instance_id\n            code\n            message\n            callable\n            filename\n            location\n            sources\n            source_names\n            sinks\n            sink_names\n            features\n            min_trace_length_to_sources\n            min_trace_length_to_sinks\n          }\n        }\n      }\n    }\n  `;\n  const {loading, error, data} = useQuery(IssueQuery, {\n    variables: {run_id, issue_instance_id},\n  });\n  const issue = data?.issues?.edges[0]?.node || null;\n\n  var content = null;\n  if (error) {\n    content = (\n      <Modal title=\"Error\" visible={true} footer={null}>\n        <p>{error.toString()}</p>\n      </Modal>\n    );\n  } else {\n    content = (\n      <>\n        {loading ? (\n          <IssueSkeleton />\n        ) : (\n          <Issue run_id={run_id} issue={issue} hideTitle={true} />\n        )}\n        <br />\n        <Expansion\n          issue_instance_id={issue_instance_id}\n          issue={issue}\n          kind=\"postcondition\"\n        />\n        <TraceRoot data={data} loading={loading} />\n        <Expansion\n          issue_instance_id={issue_instance_id}\n          issue={issue}\n          kind=\"precondition\"\n        />\n      </>\n    );\n  }\n\n  return (\n    <>\n      <Breadcrumb style={{margin: '16px 0'}}>\n        <Breadcrumb.Item href=\"/runs\">Runs</Breadcrumb.Item>\n        <Breadcrumb.Item href={`/run/${run_id}`}>Run {run_id}</Breadcrumb.Item>\n        <Breadcrumb.Item>Issue {issue?.issue_id || ''}</Breadcrumb.Item>\n      </Breadcrumb>\n      {content}\n    </>\n  );\n}\n\nexport default withRouter(Trace);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow\n */\n\nimport React from 'react';\nimport {useQuery, gql} from '@apollo/client';\nimport {Breadcrumb, Card, Col, Modal, Row, Typography} from 'antd';\nimport {LoadingOutlined, SyncOutlined} from '@ant-design/icons';\n\nconst {Text, Link} = Typography;\n\ntype RunDescription = $ReadOnly<{\n  run_id: number,\n  date: string,\n}>;\n\nfunction Run(props: $ReadOnly<{run: RunDescription}>): React$Node {\n  const gutter = [8, 8];\n\n  const Label = (props: $ReadOnly<{children: React$Node}>): React$Node => {\n    return (\n      <Col span={4} style={{textAlign: 'right'}}>\n        <Text type=\"secondary\">{props.children}</Text>\n      </Col>\n    );\n  };\n  const Item = (props: $ReadOnly<{children: React$Node}>): React$Node => {\n    return (\n      <Col span={20}>\n        <Text type=\"secondary\">{props.children}</Text>\n      </Col>\n    );\n  };\n\n  return (\n    <>\n      <Card\n        size=\"small\"\n        title={\n          <>\n            <SyncOutlined style={{marginRight: '.5em'}} />\n            Run {props.run.run_id}\n          </>\n        }\n        extra={<Link href={`/run/${props.run.run_id}`}>Issues</Link>}>\n        <Row gutter={gutter}>\n          <Label>Date</Label>\n          <Item>\n            <Text code>{props.run.date}</Text>\n          </Item>\n        </Row>\n      </Card>\n      <br />\n    </>\n  );\n}\n\nexport default function Runs(props: $ReadOnly<{}>): React$Node {\n  const RunsQuery = gql`\n    query Run {\n      runs {\n        edges {\n          node {\n            run_id\n            date\n          }\n        }\n      }\n    }\n  `;\n\n  const {loading, error, data} = useQuery(RunsQuery);\n\n  if (error) {\n    Modal.error({title: 'Unable to load run data', content: error.toString()});\n    return null;\n  }\n\n  var content = null;\n  if (loading) {\n    content = (\n      <Card>\n        <div style={{height: '12em', textAlign: 'center', paddingTop: '5em'}}>\n          <Text type=\"secondary\">\n            <LoadingOutlined />\n            <br />\n            Loading runs...\n          </Text>\n        </div>\n      </Card>\n    );\n  }\n\n  if (data) {\n    content = data.runs.edges.map(edge => <Run run={edge.node} />);\n  }\n\n  return (\n    <>\n      <Breadcrumb style={{margin: '16px 0'}}>\n        <Breadcrumb.Item>Runs</Breadcrumb.Item>\n      </Breadcrumb>\n      {content}\n    </>\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/,\n    ),\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA',\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: {'Service-Worker': 'script'},\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.',\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Layout} from 'antd';\nimport './index.css';\nimport Issues from './Issues';\nimport Traces from './Traces';\nimport Runs from './Runs';\nimport * as serviceWorker from './serviceWorker';\nimport {Route, BrowserRouter as Router} from 'react-router-dom';\nimport {ApolloClient, InMemoryCache, ApolloProvider} from '@apollo/client';\nimport {FireFilled} from '@ant-design/icons';\nimport {useQuery, gql} from '@apollo/client';\nimport {Card, Modal, Typography} from 'antd';\nimport {LoadingOutlined} from '@ant-design/icons';\n\nimport 'antd/dist/antd.css';\n\nconst {Header, Content, Footer} = Layout;\nconst {Text} = Typography;\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache(),\n});\n\nfunction IssuesForLatestRun(): React$Node {\n  const RunsQuery = gql`\n    query Run {\n      runs {\n        edges {\n          node {\n            run_id\n            date\n          }\n        }\n      }\n    }\n  `;\n\n  const {loading, error} = useQuery(RunsQuery, {\n    onCompleted: data => {\n      var run_id = -1;\n      data.runs.edges.forEach(edge => {\n        if (edge.node.run_id > run_id) {\n          run_id = edge.node.run_id;\n        }\n      });\n      if (run_id === -1) {\n        Modal.error({\n          title: 'Unable to load run data',\n          content: 'No completed run found',\n        });\n      }\n      window.location = `/run/${run_id}`;\n    },\n  });\n\n  if (error) {\n    Modal.error({title: 'Unable to load run data', content: error.toString()});\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <div style={{height: '12em', textAlign: 'center', paddingTop: '5em'}}>\n          <Text type=\"secondary\">\n            <LoadingOutlined />\n            <br />\n            Loading latest run...\n          </Text>\n        </div>\n      </Card>\n    );\n  }\n\n  return null;\n}\n\nconst routing = (\n  <ApolloProvider client={client}>\n    <Router>\n      <Layout>\n        <Header class=\"header\">\n          <div class=\"logo\">\n            <FireFilled style={{marginRight: '.2em'}} />\n            SAPP\n          </div>\n        </Header>\n        <Content>\n          <div class=\"main\">\n            <Route exact path=\"/\" component={IssuesForLatestRun} />\n            <Route exact path=\"/runs/\" component={Runs} />\n            <Route exact path=\"/run/:run_id/\" component={Issues} />\n            <Route\n              exact\n              path=\"/run/:run_id/issue/:issue_instance_id\"\n              component={Traces}\n            />\n          </div>\n        </Content>\n        <Footer />\n      </Layout>\n    </Router>\n  </ApolloProvider>\n);\n\nReactDOM.render(routing, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}